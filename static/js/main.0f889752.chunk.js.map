{"version":3,"sources":["pages/components/PodcastItem.js","pages/components/PodcastList.js","pages/components/SearchBar.js","pages/SearchPage.js","pages/components/TrackItem.js","pages/components/TrackList.js","pages/ListenPage.js","pages/SubscriptionsPage.js","pages/AudioPlayer.js","App.js","index.js"],"names":["podcast","onPodcastSelect","classes","makeStyles","root","minHeight","width","actionArea","height","media","paddingTop","marginTop","useStyles","Grid","item","xs","sm","md","lg","className","Card","CardActionArea","onClick","CardMedia","image","artworkUrl600","title","collectionName","CardContent","Typography","gutterBottom","variant","component","noWrap","color","primaryGenreName","subscriptionList","podcasts","undefined","length","justify","container","style","justifyContent","marginBottom","listOfPodcasts","map","PodcastItem","key","collectionId","spacing","SearchBarWrapper","props","handleChange","newValue","setState","searchTerm","handleSubmit","state","onFormSubmit","value","this","onChange","onRequestSearch","onCancelSearch","React","Component","getPodcast","setSelectedPodcast","SearchBar","PodcastList","track","onTrackSelect","titles","Array","prototype","slice","call","getElementsByTagName","playIcon","verticalAlign","marginRight","childNodes","nodeValue","tracks","listOfTracks","TrackItem","direction","maxWidth","selectedPodcast","setSelectedTrack","toggleSubscription","subscribed","artistName","FormControlLabel","control","Switch","checked","label","margin","TrackList","subscriptions","marginLeft","src","autoPlay","controls","App","term","a","toString","replace","url","fetch","result","json","items","results","id","trackId","cors","result1","items1","feedUrl","result2","text","podcastDocument","DOMParser","parseFromString","selectedTab","selectedTrackUrl","getAttribute","handleTabChange","event","subscribe","newSubs","push","filter","pod","alert","includes","AppBar","position","Toolbar","Tabs","Tab","AudioPlayer","SearchPage","ListenPage","SubscriptionsPage","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.0f889752.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles, Grid, Typography,Card, CardActionArea, CardMedia, CardContent} from \"@material-ui/core\";\n\n\nexport default ({podcast, onPodcastSelect}) => {\n  const useStyles = makeStyles({\n    root: {\n      minHeight: '325px',\n      width: \"100%\"\n    },\n    actionArea: {\n      height: \"100%\"\n    },\n    media: {\n      height: 0,\n      paddingTop: '70%',\n      marginTop:'30'\n    },\n    \n  });\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} sm={6} md={4} lg={3} className={classes.root}>\n      <Card>\n        <CardActionArea onClick={() => onPodcastSelect(podcast)} className={classes.actionArea}>\n          <CardMedia \n            className={classes.media}\n            image={podcast.artworkUrl600}\n            title={podcast.collectionName}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" noWrap>\n              {podcast.collectionName}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {'Genre: '+podcast.primaryGenreName}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grid>\n\n    \n  );\n}\n\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport PodcastItem from './PodcastItem';\n\nexport default ({ subscriptionList, podcasts, onPodcastSelect }) => {\n\tif (podcasts === undefined) {\n\t\treturn null;\n\t}\n\n\tif (podcasts.length < 1) {\n\t\tif (subscriptionList){\n\t\t\treturn (\n\t\t\t\t<Grid item justify=\"center\" container>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography variant=\"h5\" style={{ marginTop:\"80px\", justifyContent: \"center\" }}>\n\t\t\t\t\t\t\tYou have no current subscriptions\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Grid item justify=\"center\" container >\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography variant=\"h5\" style={{ marginTop:\"80px\", marginBottom:\"10px\", justifyContent: \"center\" }}>\n\t\t\t\t\t\tCouldn't find a podcast with that name\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t);\n\t\t}\n\t}\n\n\tconst listOfPodcasts = podcasts.map((podcast) => (\n\t\t<PodcastItem\n\t\t\tonPodcastSelect={onPodcastSelect}\n\t\t\tkey={podcast.collectionId}\n\t\t\tpodcast={podcast}\n\t\t/>\n\t));\n\n\treturn (\n\t\t<Grid container spacing={4}>\n\t\t\t{listOfPodcasts}\n\t\t</Grid>\n\t);\n};","import React from 'react'\nimport SearchBar from \"material-ui-search-bar\";\n\nclass SearchBarWrapper extends React.Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            searchTerm: ''\n        }\n    }\n\n    //handlers that update the input in state once input is added\n    handleChange = (newValue) => {\n        this.setState({\n            searchTerm: newValue\n        })\n    }\n\n    handleSubmit = () => {\n        const {searchTerm} = this.state\n        const {onFormSubmit} = this.props\n\n        onFormSubmit (searchTerm)\n    }\n\n    render () {\n        return (\n            <SearchBar\n                value={this.state.searchTerm}\n                onChange={this.handleChange}\n                onRequestSearch={this.handleSubmit}\n                onCancelSearch={()=>{\n                    this.setState({\n                        searchTerm: ''\n                    })\n                }}\n            />\n            \n        )\n    }\n}\n\nexport default SearchBarWrapper\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PodcastList from './components/PodcastList';\nimport SearchBar from './components/SearchBar';\n\n\nexport default ({podcasts, getPodcast, setSelectedPodcast}) => {\n  \n  return (\n    \n        <Grid item xs={10}>\n            <Grid item container spacing={3} style={{ justifyContent: \"center\" }}>\n                <Grid item xs={8}style={{ marginTop: \"10px\" }}>\n                    <SearchBar onFormSubmit={getPodcast}/>\n                </Grid>\n                <Grid item xs={12}>\n                  <PodcastList podcasts={podcasts} onPodcastSelect={setSelectedPodcast}/>\n                </Grid>\n            </Grid>\n        </Grid>\n  );\n}","import React from \"react\";\nimport { Grid, makeStyles, Typography,Card, CardActionArea, CardContent} from \"@material-ui/core\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nexport default ({track, onTrackSelect}) => {\n\n  const titles = Array.prototype.slice.call(\n    track.getElementsByTagName(\"title\"),\n  )\n\n  const useStyles = makeStyles({\n    media: {\n      height: 0,\n      paddingTop: '70%',\n      marginTop:'30'\n    },\n    playIcon: {\n      verticalAlign:\"middle\",\n      color: \" #a93226\",\n      marginRight: \"10px\",\n      marginBottom: \"0\",\n    },\n  });\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n    <Card>\n      <CardActionArea onClick={() => onTrackSelect(track)}>\n        <CardContent>\n          <Typography variant=\"h6\" noWrap>\n            <PlayArrowIcon className={classes.playIcon}/>\n            {titles[0].childNodes[0].nodeValue}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  </Grid>\n\n\n    \n  );\n}\n","import React from 'react';\nimport { Grid} from '@material-ui/core';\n\nimport TrackItem from './TrackItem';\n\nexport default ({ podcast, tracks, onTrackSelect }) => {\n    \n\tif (tracks === undefined) {\n\t\treturn null\n\t}\n/*\n\tif (podcasts.length < 1) {\n\t\treturn (\n\t\t\t<Grid container spacing={10}>\n\t\t\t\t<h2>\n\t\t\t\t\tThere are no podcasts matching\n\t\t\t\t\tthese terms\n\t\t\t\t</h2>\n\t\t\t</Grid>\n\t\t);\n    }*/\n    \n\n\tconst listOfTracks = Array.prototype.slice.call(tracks).map((track) => {\n        return (\n            <TrackItem\n                onTrackSelect={onTrackSelect}\n                key={track}\n                track={track}\n            />\n        )\n    })\n\n\treturn (\n\t\t<Grid item container \n\t\t\tdirection=\"column\"\n\t\t\tstyle={{maxWidth:\"750px\"}}\n\t\t\tspacing={1}\n\t\t>\n\t\t\t\n\t\t\t\t{listOfTracks}\n\t\t\t\n\t\t</Grid>\n\t\n\t);\n};\n","import React from \"react\";\nimport { Grid, Switch, Typography, FormControlLabel, makeStyles, Card, CardMedia} from \"@material-ui/core\";\nimport TrackList from './components/TrackList';\n\nexport default ({selectedPodcast, tracks, setSelectedTrack, toggleSubscription, subscribed}) => {\n\n  \n    const useStyles = makeStyles({\n      media: {\n        width: \"250px\",\n        height: \"250px\"\n      },\n      \n    });\n    const classes = useStyles();\n    if (selectedPodcast === undefined){\n      return (\n        <Grid item style={{ marginTop:\"100px\", justifyContent: \"center\" }} container>\n          <Typography variant=\"h5\">\n                Search and select a podcast first!\n          </Typography>\n        </Grid>\n      );\n    }\n    return (  \n      <Grid item container xs={10} justify=\"center\" style={{ marginTop: \"10px\" }} spacing={3}>\n\n            <Grid item>\n                  <Card>\n                      <CardMedia \n                        className={classes.media}\n                        image={selectedPodcast.artworkUrl600}\n                        title={selectedPodcast.collectionName}\n                      />\n                  </Card>\n            </Grid>\n\n\n            <Grid item container  xs={4} justify=\"center\" direction ='column'>\n                <Grid item>\n                  <Typography variant=\"h4\">\n                    {selectedPodcast.collectionName}\n                  </Typography>\n                </Grid>\n                <Grid item style={{ marginTop: \"15px\" }}>\n                  <Typography variant=\"subtitle1\">\n                    by {selectedPodcast.artistName}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"subtitle1\">\n                    Genre: {selectedPodcast.primaryGenreName}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <FormControlLabel \n                    control={<Switch checked={subscribed} onChange = {()=>{toggleSubscription(!subscribed, selectedPodcast)}}/>} \n                    label=\"Subscribe\" \n                    style={{ marginTop: \"15px\" }}\n                  />\n                </Grid>\n            </Grid>\n            <Grid item xs={12} style={{margin:\"-10px\"}}>\n            </Grid>\n\n\n            <Grid item>\n                <Typography variant=\"h5\" style={{marginBottom:\"10px\"}}>\n                  All Episodes\n                </Typography>\n                <TrackList tracks={tracks} onTrackSelect={setSelectedTrack}/>\n            </Grid>\n\n\n\n      </Grid>\n  \n    );\n  \n\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PodcastList from './components/PodcastList';\n\n\nexport default ({subscriptions, setSelectedPodcast}) => {\n\n  return (\n      <Grid item xs={10} style={{ marginTop: \"15px\" }}>\n        <PodcastList subscriptionList={true} podcasts={subscriptions} onPodcastSelect={setSelectedPodcast}/>\n      </Grid>\n  );\n}","import ReactAudioPlayer from 'react-audio-player';\nimport React from \"react\";\n\nexport default ({selectedPodcast}) => {\n  const style = {\n      width:\"30vw\",\n      marginLeft: 'auto',\n  };\n  return (\n        <ReactAudioPlayer\n          style={style} \n          src={selectedPodcast}\n          autoPlay\n          controls\n        />\n\n  );\n}\n\n\n\n\n\n","import React from 'react';\nimport './App.css';\nimport {Grid, Tabs, Tab, AppBar, Toolbar} from '@material-ui/core'\nimport { DOMParser } from \"xmldom\"\n\nimport {SearchPage, ListenPage, SubscriptionsPage, AudioPlayer} from './pages'\n\n\nclass App extends React.Component {\n  constructor (props) {\n    super (props)\n    this.state = {\n      selectedTab: 0,\n      podcasts: undefined,\n      selectedPodcast: undefined,\n      podcastDocument: undefined,\n      tracks: undefined,\n      selectedTrackUrl: undefined,\n      subscriptions: []\n    }\n  }\n\n  getPodcast = async (term) => {\n    term = term.toString().replace(/[^a-zA-Z0-9]/g, ' ');\n    const url = `https://itunes.apple.com/search?term=${term}&entity=podcast`\n    const cors = 'https://cors-anywhere.herokuapp.com/'\n\n    const result = await fetch(cors+url)\n    const items = await result.json()\n    this.setState({\n      podcasts: items.results,\n      tracks: undefined\n    })\n    \n  }  \n\n  setSelectedPodcast = async (podcast) => {\n    const id = podcast.trackId\n    const cors = 'https://cors-anywhere.herokuapp.com/'\n\n    const result1 = await fetch(cors+`https://itunes.apple.com/lookup?id=${id}&entity=podcast`)\n    const items1 = await result1.json()\n    const result2 = await fetch(cors+items1.results[0].feedUrl)\n    const text = await result2.text()\n\n    const podcastDocument = new DOMParser().parseFromString(\n      text,\n      \"text/xml\",\n    )\n\n    const items = podcastDocument.getElementsByTagName(\"item\")\n\n    this.setState({\n      selectedPodcast: podcast,\n      podcastDocument: podcastDocument,\n      tracks: items,\n      selectedTab: 1\n    })\n\n  }\n\n  setSelectedTrack = async (track) => {\n    this.setState({\n      selectedTrackUrl: track.getElementsByTagName(\"enclosure\")[0].getAttribute(\"url\")\n    })\n  }\n  \n  \n  handleTabChange = (event, newValue) => {\n    this.setState({\n      selectedTab: newValue\n    })\n  }\n\n  toggleSubscription = (subscribe, podcast) => {\n    let newSubs = this.state.subscriptions\n    if (subscribe) {\n      newSubs.push(podcast)\n    } else {\n      newSubs = newSubs.filter((pod)=>{\n        return (pod.collectionId !== podcast.collectionId)\n      })\n    }\n    this.setState({\n      subscriptions: newSubs\n    })\n    alert(`${(subscribe) ? \"Added\":\"Removed\"} \"${podcast.collectionName}\" ${(subscribe) ? \"to\":\"from\"} subscriptions`);\n  }\n\n  render () {\n    const {podcasts, selectedPodcast, selectedTab, tracks, selectedTrackUrl, subscriptions}=this.state\n    const subscribed = subscriptions.includes(selectedPodcast)\n    \n    return (\n        <>\n          <AppBar position=\"sticky\">\n            <Toolbar>\n              <Tabs value={selectedTab} onChange={this.handleTabChange}>\n                <Tab label=\"Search Podcast\" />\n                <Tab label=\"Episodes\" />\n                <Tab label=\"Subscriptions\" />\n              </Tabs>\n              <AudioPlayer selectedPodcast = {selectedTrackUrl}/>\n            </Toolbar>\n          </AppBar>\n\n          <Grid style={{ justifyContent: \"center\" }} container spacing={0}>\n            {selectedTab === 0 && <SearchPage podcasts={podcasts} getPodcast={this.getPodcast}  setSelectedPodcast ={this.setSelectedPodcast}/>}\n            {selectedTab === 1 && <ListenPage subscribed={subscribed} selectedPodcast={selectedPodcast} tracks={tracks} setSelectedTrack={this.setSelectedTrack} toggleSubscription={this.toggleSubscription} />}\n            {selectedTab === 2 && <SubscriptionsPage subscriptions={subscriptions} setSelectedPodcast ={this.setSelectedPodcast}/>}\n          </Grid>\n        </>\n    );\n    \n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}