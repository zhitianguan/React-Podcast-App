{"version":3,"sources":["pages/components/PodcastItem.js","pages/components/PodcastList.js","pages/components/SearchBar.js","pages/SearchPage.js","pages/components/TrackItem.js","pages/components/TrackList.js","pages/ListenPage.js","pages/SubscriptionsPage.js","pages/AudioPlayer.js","api/index.js","pages/components/SignupForm.js","pages/components/SignupDialog.js","App.js","index.js"],"names":["podcast","onPodcastSelect","classes","makeStyles","root","minHeight","width","actionArea","height","media","paddingTop","marginTop","useStyles","Grid","item","xs","sm","md","lg","className","Card","CardActionArea","onClick","CardMedia","image","artworkUrl600","title","collectionName","CardContent","Typography","gutterBottom","variant","component","noWrap","color","primaryGenreName","PodcastList","isSubscriptionList","podcasts","undefined","length","justify","container","style","justifyContent","marginBottom","listOfPodcasts","map","PodcastItem","key","collectionId","spacing","SearchBarWrapper","props","handleChange","newValue","setState","searchTerm","handleSubmit","state","onFormSubmit","value","this","onChange","onRequestSearch","onCancelSearch","React","Component","SearchPage","getPodcasts","handleOnSelectPodcast","SearchBar","track","onTrackSelect","titles","Array","prototype","slice","call","getElementsByTagName","playIcon","verticalAlign","marginRight","childNodes","nodeValue","tracks","splice","listOfTracks","TrackItem","direction","maxWidth","selectedPodcast","onClickTrack","toggleSubscription","subscribed","loggedIn","artistName","FormControlLabel","control","Switch","checked","disabled","label","margin","TrackList","SubscriptionsPage","subscriptions","isSignedIn","console","log","src","autoPlay","controls","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","signIn","userData","post","signUp","getSubs","email","get","params","updateSubs","patch","theme","display","flexDirection","alignItems","padding","textTransform","initialState","firstName","lastName","password","SignupForm","handleClose","setUser","useState","setUserData","isSignup","setIsSignup","e","a","preventDefault","api","data","setItem","stringify","onSubmit","TextField","required","target","type","Button","prevIsSignup","SignupDialog","open","Dialog","onClose","App","selectedTab","setSelectedTab","setPodcasts","setSelectedPodcast","setTracks","selectedTrackUrl","setSelectedTrackUrl","isSignupDialogOpen","setIsSignupDialogOpen","user","setSubscriptions","findIndex","setSubscribed","useEffect","fetchSubs","term","toString","replace","url","fetch","mode","result","json","items","results","id","trackId","result1","items1","feedUrl","result2","text","podcastDocument","DOMParser","parseFromString","from","subscribe","newSubs","pod","push","filter","AppBar","position","Toolbar","Tabs","event","Tab","marginLeft","Avatar","alt","name","charAt","clear","ListenPage","getAttribute","bottom","textAlign","AudioPlayer","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.9c750b27.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles, Grid, Typography,Card, CardActionArea, CardMedia, CardContent} from \"@material-ui/core\";\n\n\nexport default ({podcast, onPodcastSelect}) => {\n  const useStyles = makeStyles({\n    root: {\n      minHeight: '325px',\n      width: \"100%\"\n    },\n    actionArea: {\n      height: \"100%\"\n    },\n    media: {\n      height: 0,\n      paddingTop: '70%',\n      marginTop:'30'\n    },\n    \n  });\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} sm={6} md={4} lg={3} className={classes.root}>\n      <Card>\n        <CardActionArea onClick={() => onPodcastSelect(podcast)} className={classes.actionArea}>\n          <CardMedia \n            className={classes.media}\n            image={podcast.artworkUrl600}\n            title={podcast.collectionName}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" noWrap>\n              {podcast.collectionName}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {'Genre: '+podcast.primaryGenreName}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grid>\n\n    \n  );\n}\n\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nimport PodcastItem from \"./PodcastItem\";\n\nconst PodcastList = ({ isSubscriptionList, podcasts, onPodcastSelect }) => {\n  if (podcasts === undefined) {\n    return null;\n  }\n\n  if (podcasts.length < 1) {\n    return (\n      <Grid item justify=\"center\" container>\n        <Grid item>\n          {isSubscriptionList ? (\n            <Typography\n              variant=\"h5\"\n              style={{ marginTop: \"80px\", justifyContent: \"center\" }}\n            >\n              You have no current subscriptions\n            </Typography>\n          ) : (\n            <Typography\n              variant=\"h5\"\n              style={{\n                marginTop: \"80px\",\n                marginBottom: \"10px\",\n                justifyContent: \"center\",\n              }}\n            >\n              Couldn't find a podcast with that name\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  const listOfPodcasts = podcasts.map((podcast) => (\n    <PodcastItem\n      onPodcastSelect={onPodcastSelect}\n      key={podcast.collectionId}\n      podcast={podcast}\n    />\n  ));\n\n  return (\n    <Grid container spacing={4}>\n      {listOfPodcasts}\n    </Grid>\n  );\n};\n\nexport default PodcastList;\n","import React from 'react'\nimport SearchBar from \"material-ui-search-bar\";\n\nclass SearchBarWrapper extends React.Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            searchTerm: ''\n        }\n    }\n\n    //handlers that update the input in state once input is added\n    handleChange = (newValue) => {\n        this.setState({\n            searchTerm: newValue\n        })\n    }\n\n    handleSubmit = () => {\n        const {searchTerm} = this.state\n        const {onFormSubmit} = this.props\n\n        onFormSubmit (searchTerm)\n    }\n\n    render () {\n        return (\n            <SearchBar\n                value={this.state.searchTerm}\n                onChange={this.handleChange}\n                onRequestSearch={this.handleSubmit}\n                onCancelSearch={()=>{\n                    this.setState({\n                        searchTerm: ''\n                    })\n                }}\n            />\n            \n        )\n    }\n}\n\nexport default SearchBarWrapper\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport PodcastList from \"./components/PodcastList\";\nimport SearchBar from \"./components/SearchBar\";\n\nconst SearchPage = ({ podcasts, getPodcasts, handleOnSelectPodcast }) => {\n  return (\n    <Grid item xs={10}>\n      <Grid item container spacing={3} style={{ justifyContent: \"center\" }}>\n        <Grid item xs={8} style={{ marginTop: \"10px\" }}>\n          <SearchBar onFormSubmit={getPodcasts} />\n        </Grid>\n\n        {podcasts === undefined ? (\n          <Grid\n            item\n            style={{ marginTop: \"50px\", justifyContent: \"center\" }}\n            container\n          >\n            <Typography variant=\"h6\">\n              ☝️ Type something and press enter to search for podcasts!\n            </Typography>\n          </Grid>\n        ) : (\n          <Grid item xs={12}>\n            <PodcastList\n              podcasts={podcasts}\n              onPodcastSelect={handleOnSelectPodcast}\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SearchPage;\n","import React from \"react\";\nimport { Grid, makeStyles, Typography,Card, CardActionArea, CardContent} from \"@material-ui/core\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nexport default ({track, onTrackSelect}) => {\n\n  const titles = Array.prototype.slice.call(\n    track.getElementsByTagName(\"title\"),\n  )\n\n  const useStyles = makeStyles({\n    media: {\n      height: 0,\n      paddingTop: '70%',\n      marginTop:'30'\n    },\n    playIcon: {\n      verticalAlign:\"middle\",\n      color: \" #a93226\",\n      marginRight: \"10px\",\n      marginBottom: \"0\",\n    },\n  });\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n    <Card>\n      <CardActionArea onClick={() => onTrackSelect(track)}>\n        <CardContent>\n          <Typography variant=\"h6\" noWrap>\n            <PlayArrowIcon className={classes.playIcon}/>\n            {titles[0].childNodes[0].nodeValue}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  </Grid>\n\n\n    \n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport TrackItem from \"./TrackItem\";\n\nexport default ({ podcast, tracks, onTrackSelect }) => {\n  if (tracks === undefined) {\n    return null;\n  }\n  if (tracks.length > 75) {\n    tracks.splice(75, tracks.length - 75);\n  }\n  const listOfTracks = tracks.map((track) => {\n    return (\n      <TrackItem onTrackSelect={onTrackSelect} key={track} track={track} />\n    );\n  });\n\n  return (\n    <Grid\n      item\n      container\n      direction=\"column\"\n      style={{ maxWidth: \"750px\" }}\n      spacing={1}\n    >\n      {listOfTracks}\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Grid,\n  Switch,\n  Typography,\n  FormControlLabel,\n  makeStyles,\n  Card,\n  CardMedia,\n} from \"@material-ui/core\";\nimport TrackList from \"./components/TrackList\";\n\nexport default ({\n  selectedPodcast,\n  tracks,\n  onClickTrack,\n  toggleSubscription,\n  subscribed,\n  loggedIn,\n}) => {\n  const useStyles = makeStyles({\n    media: {\n      width: \"250px\",\n      height: \"250px\",\n    },\n  });\n  const classes = useStyles();\n  if (selectedPodcast === undefined) {\n    return (\n      <Grid\n        item\n        style={{ marginTop: \"100px\", justifyContent: \"center\" }}\n        container\n      >\n        <Typography variant=\"h5\">Search and select a podcast first!</Typography>\n      </Grid>\n    );\n  }\n  return (\n    <Grid\n      item\n      container\n      xs={10}\n      justify=\"center\"\n      style={{ marginTop: \"10px\" }}\n      spacing={3}\n    >\n      <Grid item>\n        <Card>\n          <CardMedia\n            className={classes.media}\n            image={selectedPodcast.artworkUrl600}\n            title={selectedPodcast.collectionName}\n          />\n        </Card>\n      </Grid>\n\n      <Grid item container xs={4} justify=\"center\" direction=\"column\">\n        <Grid item>\n          <Typography variant=\"h4\">{selectedPodcast.collectionName}</Typography>\n        </Grid>\n        <Grid item style={{ marginTop: \"15px\" }}>\n          <Typography variant=\"subtitle1\">\n            by {selectedPodcast.artistName}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"subtitle1\">\n            Genre: {selectedPodcast.primaryGenreName}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={subscribed}\n                disabled={!loggedIn}\n                onChange={() => {\n                  toggleSubscription(!subscribed, selectedPodcast);\n                }}\n              />\n            }\n            label=\"Subscribe\"\n            style={{ marginTop: \"15px\" }}\n          />\n        </Grid>\n      </Grid>\n\n      {!loggedIn && (\n        <Grid item container xs={8} justify=\"center\">\n          <Typography variant=\"subtitle1\">\n            Sign in to enable podcast subscription feature!\n          </Typography>\n        </Grid>\n      )}\n\n      <Grid item xs={12} style={{ margin: \"-10px\" }}></Grid>\n\n      <Grid item style={{ marginBottom: \"100px\" }}>\n        <Typography variant=\"h5\" style={{ marginBottom: \"10px\" }}>\n          Episodes\n        </Typography>\n        <TrackList tracks={tracks} onTrackSelect={onClickTrack} />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport PodcastList from \"./components/PodcastList\";\n\nconst SubscriptionsPage = ({\n  subscriptions,\n  handleOnSelectPodcast,\n  isSignedIn,\n}) => {\n  console.log(subscriptions);\n  return isSignedIn ? (\n    <Grid item xs={10} style={{ marginTop: \"15px\" }}>\n      <PodcastList\n        isSubscriptionList={true}\n        podcasts={subscriptions}\n        onPodcastSelect={handleOnSelectPodcast}\n      />\n    </Grid>\n  ) : (\n    <Grid item justify=\"center\" container>\n      <Grid item>\n        <Typography\n          variant=\"h5\"\n          style={{ marginTop: \"80px\", justifyContent: \"center\" }}\n        >\n          Please sign in to see your subscriptions\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SubscriptionsPage;\n","import ReactAudioPlayer from 'react-audio-player';\nimport React from \"react\";\n\nexport default ({selectedPodcast}) => {\n  const style = {\n      width:\"65vw\",\n  };\n  return (\n        <ReactAudioPlayer\n          style={style} \n          src={selectedPodcast}\n          autoPlay\n          controls\n        />\n\n  );\n}\n\n\n\n\n\n","import axios from \"axios\";\n\nconst API = axios.create({ baseURL: \"https://podcast-app.herokuapp.com\" });\n\n//the function we pass into API.interceptors.request.use() is run before any axios request\n//add token to req.headers\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.Authorization = `Bearer ${\n      JSON.parse(localStorage.getItem(\"profile\")).token\n    }`;\n  }\n  return req;\n});\n\nconst signIn = (userData) => {\n  return API.post(\"/user/signin\", userData);\n};\nconst signUp = (userData) => API.post(\"/user/signup\", userData);\n\nconst getSubs = (email) => {\n  return API.get(`/subscriptions`, {\n  params: {\n   email\n  }});\n};\n\nconst updateSubs = (email, subscriptions) => {\n  return API.patch(\"/subscriptions\", { email, subscriptions });\n};\n\nexport { signIn, signUp, getSubs, updateSubs };\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport * as api from \"../../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: theme.spacing(2),\n\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"300px\",\n    },\n    \"& .MuiButtonBase-root\": {\n      margin: theme.spacing(2),\n      textTransform: \"none\",\n    },\n  },\n}));\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nconst SignupForm = ({ handleClose, setUser}) => {\n  const classes = useStyles();\n  const [userData, setUserData] = useState(initialState);\n\n  const [isSignup, setIsSignup] = useState(true);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      const { data } = await api.signUp(userData);\n      localStorage.setItem(\"profile\", JSON.stringify({ ...data }));\n    } else {\n      const { data } = await api.signIn(userData);\n      localStorage.setItem(\"profile\", JSON.stringify({ ...data }));\n    }\n    setUser(JSON.parse(localStorage.getItem(\"profile\"))?.userData)\n    handleClose();\n  };\n\n  const switchMode = () => {\n    setUserData(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n  };\n\n  return (\n    <form className={classes.root} onSubmit={handleSubmit}>\n      <Typography component=\"h1\" variant=\"h5\">\n        {isSignup ? \"Sign up\" : \"Sign in\"}\n      </Typography>\n      {isSignup && (\n        <>\n          <TextField\n            label=\"First Name\"\n            variant=\"filled\"\n            required\n            value={userData.firstName}\n            onChange={(e) =>\n              setUserData({ ...userData, firstName: e.target.value })\n            }\n          />\n          <TextField\n            label=\"Last Name\"\n            variant=\"filled\"\n            required\n            value={userData.lastName}\n            onChange={(e) =>\n              setUserData({ ...userData, lastName: e.target.value })\n            }\n          />\n        </>\n      )}\n      <TextField\n        label=\"Email\"\n        variant=\"filled\"\n        type=\"email\"\n        required\n        value={userData.email}\n        onChange={(e) => setUserData({ ...userData, email: e.target.value })}\n      />\n      <TextField\n        label=\"Password\"\n        variant=\"filled\"\n        type=\"password\"\n        required\n        value={userData.password}\n        onChange={(e) => setUserData({ ...userData, password: e.target.value })}\n      />\n      <div>\n        <Button variant=\"contained\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          {isSignup ? \"Sign Up\" : \"Sign In\"}\n        </Button>\n      </div>\n\n      <Button onClick={switchMode}>\n        {isSignup\n          ? \"Already have an account? Sign in\"\n          : \"Don't have an account? Sign Up\"}\n      </Button>\n    </form>\n  );\n};\n\nexport default SignupForm;\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport SignupForm from \"./SignupForm\";\n\nconst SignupDialog = ({ open, handleClose, setUser}) => {\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <SignupForm handleClose={handleClose} setUser={setUser}/>\n     </Dialog>\n  );\n};\n\nexport default SignupDialog;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  Grid,\n  Tabs,\n  Tab,\n  AppBar,\n  Toolbar,\n  Button,\n  Avatar,\n  Typography,\n} from \"@material-ui/core\";\n//import { TableFooter } from \"@mui/material\";\nimport { DOMParser } from \"xmldom\";\n//import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport {\n  SearchPage,\n  ListenPage,\n  SubscriptionsPage,\n  AudioPlayer,\n} from \"./pages\";\nimport SignupDialog from \"./pages/components/SignupDialog\";\nimport * as api from \"./api\";\n\nconst App = () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [podcasts, setPodcasts] = useState(undefined);\n  const [selectedPodcast, setSelectedPodcast] = useState(undefined);\n  const [tracks, setTracks] = useState([]);\n  const [selectedTrackUrl, setSelectedTrackUrl] = useState(undefined);\n  const [isSignupDialogOpen, setIsSignupDialogOpen] = useState(false);\n\n  const [user, setUser] = useState(\n    JSON.parse(localStorage.getItem(\"profile\"))?.userData\n  );\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscribed, setSubscribed] = useState(\n    selectedPodcast\n      ? subscriptions.findIndex((podcast) => {\n          return podcast.collectionId === selectedPodcast.collectionId;\n        }) !== -1\n      : false\n  );\n  useEffect(() => {\n    setSubscribed(\n      selectedPodcast\n        ? subscriptions.findIndex((podcast) => {\n            return podcast.collectionId === selectedPodcast.collectionId;\n          }) !== -1\n        : false\n    );\n  }, [selectedPodcast, subscriptions]);\n\n  useEffect(() => {\n    async function fetchSubs() {\n      if (user) {\n        const { data } = await api.getSubs(user.email);\n        setSubscriptions(data);\n      } else {\n        setSubscriptions([]);\n      }\n    }\n    fetchSubs();\n  }, [user]);\n\n  const getPodcasts = async (term) => {\n    try {\n      term = term.toString().replace(/[^a-zA-Z0-9]/g, \" \");\n      const url = `https://cors.bridged.cc/https://itunes.apple.com/search?term=${term}&entity=podcast`;\n      const cors = \"https://cors-anywhere.herokuapp.com/\";\n      const result = await fetch(url, {\n        mode: \"cors\",\n        headers: {\n          \"x-cors-grida-api-key\": \"32832479-b3b1-4f24-aa44-4ab02ccb1eb7\",\n        },\n      });\n      const items = await result.json();\n\n      // this.setState({\n      //   podcasts: items.results,\n      //   tracks: undefined,\n      // });\n      setPodcasts(items.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleOnSelectPodcast = async (podcast) => {\n    const id = podcast.trackId;\n    const cors = \"https://cors-anywhere.herokuapp.com/\";\n    try {\n      const result1 = await fetch(\n        `https://cors.bridged.cc/https://itunes.apple.com/lookup?id=${id}&entity=podcast`,\n        {\n          mode: \"cors\",\n          headers: {\n            \"x-cors-grida-api-key\": \"32832479-b3b1-4f24-aa44-4ab02ccb1eb7\",\n          },\n        }\n      );\n      const items1 = await result1.json();\n      const result2 = await fetch(items1.results[0].feedUrl);\n      const text = await result2.text();\n\n      const podcastDocument = new DOMParser().parseFromString(text, \"text/xml\");\n\n      const items = podcastDocument.getElementsByTagName(\"item\");\n\n      setSelectedPodcast(podcast);\n      setTracks(Array.from(items));\n      setSelectedTab(1);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const setSelectedTrack = (track) => {\n    setSelectedTrackUrl(\n      track.getElementsByTagName(\"enclosure\")[0].getAttribute(\"url\")\n    );\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  const toggleSubscription = async (subscribe, podcast) => {\n    let newSubs = subscriptions;\n    if (subscribe) {\n      if (\n        subscriptions.findIndex((pod) => {\n          return pod.collectionId === podcast.collectionId;\n        }) === -1\n      )\n        newSubs.push(podcast);\n    } else {\n      newSubs = newSubs.filter((pod) => {\n        return pod.collectionId !== podcast.collectionId;\n      });\n    }\n    // make api call -> find the current user's document and update its subscriptions field\n    await api.updateSubs(user.email, newSubs);\n\n    setSubscriptions(newSubs);\n\n    setSubscribed(subscribe);\n  };\n\n  const handleSignupDialogOpen = () => {\n    setIsSignupDialogOpen(true);\n  };\n\n  const handleSignupDialogClose = () => {\n    setIsSignupDialogOpen(false);\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.clear();\n  };\n\n  // const subscribed = selectedPodcast\n  //   ? subscriptions.findIndex((podcast) => {\n  //       return podcast.collectionId === selectedPodcast.collectionId;\n  //     }) !== -1\n  //   : false;\n\n  // console.log({ subscriptions });\n  // console.log({ selectedPodcast });\n  // console.log(subscribed);\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Tabs value={selectedTab} onChange={handleTabChange}>\n            <Tab label=\"Search Podcast\" />\n            <Tab label=\"Episodes\" />\n            <Tab label=\"Subscriptions\" />\n          </Tabs>\n          {user ? (\n            <div\n              style={{\n                display: \"flex\",\n\n                marginLeft: \"auto\",\n              }}\n            >\n              <Avatar style={{ marginRight: \"15px\" }} alt={user?.name}>\n                {user?.name.charAt(0)}\n              </Avatar>\n              <Typography style={{ marginRight: \"15px\" }} variant=\"h6\">\n                {user?.name}\n              </Typography>\n              <Button variant=\"contained\" color=\"secondary\" onClick={logout}>\n                Logout\n              </Button>\n            </div>\n          ) : (\n            <Button\n              style={{ marginLeft: \"auto\" }}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleSignupDialogOpen}\n            >\n              Sign up\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n      <SignupDialog\n        open={isSignupDialogOpen}\n        handleClose={handleSignupDialogClose}\n        setUser={setUser}\n      />\n      <Grid style={{ justifyContent: \"center\" }} container spacing={0}>\n        {/* <Routes>\n            <Route path=\"/\" element={SearchPage} />\n            <Route path=\"/listen\" element={ListenPage} />\n            <Route path=\"/subscriptions\" element={SubscriptionsPage} />\n          </Routes> */}\n        {selectedTab === 0 && (\n          <SearchPage\n            podcasts={podcasts}\n            getPodcasts={getPodcasts}\n            handleOnSelectPodcast={handleOnSelectPodcast}\n          />\n        )}\n        {selectedTab === 1 && (\n          <ListenPage\n            //subscriptions={subscriptions}\n            subscribed={subscribed}\n            selectedPodcast={selectedPodcast}\n            tracks={tracks}\n            onClickTrack={setSelectedTrack}\n            toggleSubscription={toggleSubscription}\n            loggedIn={!!user}\n          />\n        )}\n        {selectedTab === 2 && (\n          <SubscriptionsPage\n            subscriptions={subscriptions}\n            handleOnSelectPodcast={handleOnSelectPodcast}\n            isSignedIn={!!user}\n          />\n        )}\n      </Grid>\n      {/* <AppBar color=\"primary\" sx={{ postion: \"fixed\", bottom: 0 }}></AppBar> */}\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: \"0\",\n          width: \"100%\",\n          textAlign: \"center\",\n        }}\n      >\n        <AudioPlayer selectedPodcast={selectedTrackUrl} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}